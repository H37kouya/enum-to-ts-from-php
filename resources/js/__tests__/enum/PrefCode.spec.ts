import * as TestFunc from '@/enum/PrefCode'

describe('Enum PrefCode', () => {
    it('isHOKKAIDOU', () => {
        expect(TestFunc.PrefCode.HOKKAIDOU).toBe('1')
        expect(TestFunc.isPrefCode('1')).toBeTruthy()
        expect(TestFunc.isHOKKAIDOU('1')).toBeTruthy()
        expect(TestFunc.isHOKKAIDOU('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isAOMORI', () => {
        expect(TestFunc.PrefCode.AOMORI).toBe('2')
        expect(TestFunc.isPrefCode('2')).toBeTruthy()
        expect(TestFunc.isAOMORI('2')).toBeTruthy()
        expect(TestFunc.isAOMORI('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isIWATE', () => {
        expect(TestFunc.PrefCode.IWATE).toBe('3')
        expect(TestFunc.isPrefCode('3')).toBeTruthy()
        expect(TestFunc.isIWATE('3')).toBeTruthy()
        expect(TestFunc.isIWATE('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isMIYAGI', () => {
        expect(TestFunc.PrefCode.MIYAGI).toBe('4')
        expect(TestFunc.isPrefCode('4')).toBeTruthy()
        expect(TestFunc.isMIYAGI('4')).toBeTruthy()
        expect(TestFunc.isMIYAGI('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isAKITA', () => {
        expect(TestFunc.PrefCode.AKITA).toBe('5')
        expect(TestFunc.isPrefCode('5')).toBeTruthy()
        expect(TestFunc.isAKITA('5')).toBeTruthy()
        expect(TestFunc.isAKITA('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isYAMAGATA', () => {
        expect(TestFunc.PrefCode.YAMAGATA).toBe('6')
        expect(TestFunc.isPrefCode('6')).toBeTruthy()
        expect(TestFunc.isYAMAGATA('6')).toBeTruthy()
        expect(TestFunc.isYAMAGATA('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isFUKUSIMA', () => {
        expect(TestFunc.PrefCode.FUKUSIMA).toBe('7')
        expect(TestFunc.isPrefCode('7')).toBeTruthy()
        expect(TestFunc.isFUKUSIMA('7')).toBeTruthy()
        expect(TestFunc.isFUKUSIMA('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isIBARAKI', () => {
        expect(TestFunc.PrefCode.IBARAKI).toBe('8')
        expect(TestFunc.isPrefCode('8')).toBeTruthy()
        expect(TestFunc.isIBARAKI('8')).toBeTruthy()
        expect(TestFunc.isIBARAKI('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isTOCHIGI', () => {
        expect(TestFunc.PrefCode.TOCHIGI).toBe('9')
        expect(TestFunc.isPrefCode('9')).toBeTruthy()
        expect(TestFunc.isTOCHIGI('9')).toBeTruthy()
        expect(TestFunc.isTOCHIGI('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isGUNMA', () => {
        expect(TestFunc.PrefCode.GUNMA).toBe('10')
        expect(TestFunc.isPrefCode('10')).toBeTruthy()
        expect(TestFunc.isGUNMA('10')).toBeTruthy()
        expect(TestFunc.isGUNMA('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isSAITAMA', () => {
        expect(TestFunc.PrefCode.SAITAMA).toBe('11')
        expect(TestFunc.isPrefCode('11')).toBeTruthy()
        expect(TestFunc.isSAITAMA('11')).toBeTruthy()
        expect(TestFunc.isSAITAMA('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isCHIBA', () => {
        expect(TestFunc.PrefCode.CHIBA).toBe('12')
        expect(TestFunc.isPrefCode('12')).toBeTruthy()
        expect(TestFunc.isCHIBA('12')).toBeTruthy()
        expect(TestFunc.isCHIBA('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isTOKYO', () => {
        expect(TestFunc.PrefCode.TOKYO).toBe('13')
        expect(TestFunc.isPrefCode('13')).toBeTruthy()
        expect(TestFunc.isTOKYO('13')).toBeTruthy()
        expect(TestFunc.isTOKYO('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isKANAGAWA', () => {
        expect(TestFunc.PrefCode.KANAGAWA).toBe('14')
        expect(TestFunc.isPrefCode('14')).toBeTruthy()
        expect(TestFunc.isKANAGAWA('14')).toBeTruthy()
        expect(TestFunc.isKANAGAWA('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isNIGATA', () => {
        expect(TestFunc.PrefCode.NIGATA).toBe('15')
        expect(TestFunc.isPrefCode('15')).toBeTruthy()
        expect(TestFunc.isNIGATA('15')).toBeTruthy()
        expect(TestFunc.isNIGATA('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isTOYAMA', () => {
        expect(TestFunc.PrefCode.TOYAMA).toBe('16')
        expect(TestFunc.isPrefCode('16')).toBeTruthy()
        expect(TestFunc.isTOYAMA('16')).toBeTruthy()
        expect(TestFunc.isTOYAMA('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isISIKAWA', () => {
        expect(TestFunc.PrefCode.ISIKAWA).toBe('17')
        expect(TestFunc.isPrefCode('17')).toBeTruthy()
        expect(TestFunc.isISIKAWA('17')).toBeTruthy()
        expect(TestFunc.isISIKAWA('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isFUKUI', () => {
        expect(TestFunc.PrefCode.FUKUI).toBe('18')
        expect(TestFunc.isPrefCode('18')).toBeTruthy()
        expect(TestFunc.isFUKUI('18')).toBeTruthy()
        expect(TestFunc.isFUKUI('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isYAMANASHI', () => {
        expect(TestFunc.PrefCode.YAMANASHI).toBe('19')
        expect(TestFunc.isPrefCode('19')).toBeTruthy()
        expect(TestFunc.isYAMANASHI('19')).toBeTruthy()
        expect(TestFunc.isYAMANASHI('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isNAGANO', () => {
        expect(TestFunc.PrefCode.NAGANO).toBe('20')
        expect(TestFunc.isPrefCode('20')).toBeTruthy()
        expect(TestFunc.isNAGANO('20')).toBeTruthy()
        expect(TestFunc.isNAGANO('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isGIFU', () => {
        expect(TestFunc.PrefCode.GIFU).toBe('21')
        expect(TestFunc.isPrefCode('21')).toBeTruthy()
        expect(TestFunc.isGIFU('21')).toBeTruthy()
        expect(TestFunc.isGIFU('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isSHIZUOKA', () => {
        expect(TestFunc.PrefCode.SHIZUOKA).toBe('22')
        expect(TestFunc.isPrefCode('22')).toBeTruthy()
        expect(TestFunc.isSHIZUOKA('22')).toBeTruthy()
        expect(TestFunc.isSHIZUOKA('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isAICHI', () => {
        expect(TestFunc.PrefCode.AICHI).toBe('23')
        expect(TestFunc.isPrefCode('23')).toBeTruthy()
        expect(TestFunc.isAICHI('23')).toBeTruthy()
        expect(TestFunc.isAICHI('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isMIE', () => {
        expect(TestFunc.PrefCode.MIE).toBe('24')
        expect(TestFunc.isPrefCode('24')).toBeTruthy()
        expect(TestFunc.isMIE('24')).toBeTruthy()
        expect(TestFunc.isMIE('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isSIGA', () => {
        expect(TestFunc.PrefCode.SIGA).toBe('25')
        expect(TestFunc.isPrefCode('25')).toBeTruthy()
        expect(TestFunc.isSIGA('25')).toBeTruthy()
        expect(TestFunc.isSIGA('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isKYOTO', () => {
        expect(TestFunc.PrefCode.KYOTO).toBe('26')
        expect(TestFunc.isPrefCode('26')).toBeTruthy()
        expect(TestFunc.isKYOTO('26')).toBeTruthy()
        expect(TestFunc.isKYOTO('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isOSAKA', () => {
        expect(TestFunc.PrefCode.OSAKA).toBe('27')
        expect(TestFunc.isPrefCode('27')).toBeTruthy()
        expect(TestFunc.isOSAKA('27')).toBeTruthy()
        expect(TestFunc.isOSAKA('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isHYOGO', () => {
        expect(TestFunc.PrefCode.HYOGO).toBe('28')
        expect(TestFunc.isPrefCode('28')).toBeTruthy()
        expect(TestFunc.isHYOGO('28')).toBeTruthy()
        expect(TestFunc.isHYOGO('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isNARA', () => {
        expect(TestFunc.PrefCode.NARA).toBe('29')
        expect(TestFunc.isPrefCode('29')).toBeTruthy()
        expect(TestFunc.isNARA('29')).toBeTruthy()
        expect(TestFunc.isNARA('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isWAKAYAMA', () => {
        expect(TestFunc.PrefCode.WAKAYAMA).toBe('30')
        expect(TestFunc.isPrefCode('30')).toBeTruthy()
        expect(TestFunc.isWAKAYAMA('30')).toBeTruthy()
        expect(TestFunc.isWAKAYAMA('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isTOTTORI', () => {
        expect(TestFunc.PrefCode.TOTTORI).toBe('31')
        expect(TestFunc.isPrefCode('31')).toBeTruthy()
        expect(TestFunc.isTOTTORI('31')).toBeTruthy()
        expect(TestFunc.isTOTTORI('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isSIMANE', () => {
        expect(TestFunc.PrefCode.SIMANE).toBe('32')
        expect(TestFunc.isPrefCode('32')).toBeTruthy()
        expect(TestFunc.isSIMANE('32')).toBeTruthy()
        expect(TestFunc.isSIMANE('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isOKAYAMA', () => {
        expect(TestFunc.PrefCode.OKAYAMA).toBe('33')
        expect(TestFunc.isPrefCode('33')).toBeTruthy()
        expect(TestFunc.isOKAYAMA('33')).toBeTruthy()
        expect(TestFunc.isOKAYAMA('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isHIROSIMA', () => {
        expect(TestFunc.PrefCode.HIROSIMA).toBe('34')
        expect(TestFunc.isPrefCode('34')).toBeTruthy()
        expect(TestFunc.isHIROSIMA('34')).toBeTruthy()
        expect(TestFunc.isHIROSIMA('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isYAMAGUCHI', () => {
        expect(TestFunc.PrefCode.YAMAGUCHI).toBe('35')
        expect(TestFunc.isPrefCode('35')).toBeTruthy()
        expect(TestFunc.isYAMAGUCHI('35')).toBeTruthy()
        expect(TestFunc.isYAMAGUCHI('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isTOKUSHIMA', () => {
        expect(TestFunc.PrefCode.TOKUSHIMA).toBe('36')
        expect(TestFunc.isPrefCode('36')).toBeTruthy()
        expect(TestFunc.isTOKUSHIMA('36')).toBeTruthy()
        expect(TestFunc.isTOKUSHIMA('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isKAGAWA', () => {
        expect(TestFunc.PrefCode.KAGAWA).toBe('37')
        expect(TestFunc.isPrefCode('37')).toBeTruthy()
        expect(TestFunc.isKAGAWA('37')).toBeTruthy()
        expect(TestFunc.isKAGAWA('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isEHIME', () => {
        expect(TestFunc.PrefCode.EHIME).toBe('38')
        expect(TestFunc.isPrefCode('38')).toBeTruthy()
        expect(TestFunc.isEHIME('38')).toBeTruthy()
        expect(TestFunc.isEHIME('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isKOUCHI', () => {
        expect(TestFunc.PrefCode.KOUCHI).toBe('39')
        expect(TestFunc.isPrefCode('39')).toBeTruthy()
        expect(TestFunc.isKOUCHI('39')).toBeTruthy()
        expect(TestFunc.isKOUCHI('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isFUKUSHIMA', () => {
        expect(TestFunc.PrefCode.FUKUSHIMA).toBe('40')
        expect(TestFunc.isPrefCode('40')).toBeTruthy()
        expect(TestFunc.isFUKUSHIMA('40')).toBeTruthy()
        expect(TestFunc.isFUKUSHIMA('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isSAGA', () => {
        expect(TestFunc.PrefCode.SAGA).toBe('41')
        expect(TestFunc.isPrefCode('41')).toBeTruthy()
        expect(TestFunc.isSAGA('41')).toBeTruthy()
        expect(TestFunc.isSAGA('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isNAGASAKI', () => {
        expect(TestFunc.PrefCode.NAGASAKI).toBe('42')
        expect(TestFunc.isPrefCode('42')).toBeTruthy()
        expect(TestFunc.isNAGASAKI('42')).toBeTruthy()
        expect(TestFunc.isNAGASAKI('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isKUMAMOTO', () => {
        expect(TestFunc.PrefCode.KUMAMOTO).toBe('43')
        expect(TestFunc.isPrefCode('43')).toBeTruthy()
        expect(TestFunc.isKUMAMOTO('43')).toBeTruthy()
        expect(TestFunc.isKUMAMOTO('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isOITA', () => {
        expect(TestFunc.PrefCode.OITA).toBe('44')
        expect(TestFunc.isPrefCode('44')).toBeTruthy()
        expect(TestFunc.isOITA('44')).toBeTruthy()
        expect(TestFunc.isOITA('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isMIYAZAKI', () => {
        expect(TestFunc.PrefCode.MIYAZAKI).toBe('45')
        expect(TestFunc.isPrefCode('45')).toBeTruthy()
        expect(TestFunc.isMIYAZAKI('45')).toBeTruthy()
        expect(TestFunc.isMIYAZAKI('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isKAGOSHIMA', () => {
        expect(TestFunc.PrefCode.KAGOSHIMA).toBe('46')
        expect(TestFunc.isPrefCode('46')).toBeTruthy()
        expect(TestFunc.isKAGOSHIMA('46')).toBeTruthy()
        expect(TestFunc.isKAGOSHIMA('aaaaabbbbcccc')).toBeFalsy()
    })
    it('isOKINAWA', () => {
        expect(TestFunc.PrefCode.OKINAWA).toBe('47')
        expect(TestFunc.isPrefCode('47')).toBeTruthy()
        expect(TestFunc.isOKINAWA('47')).toBeTruthy()
        expect(TestFunc.isOKINAWA('aaaaabbbbcccc')).toBeFalsy()
    })

})
